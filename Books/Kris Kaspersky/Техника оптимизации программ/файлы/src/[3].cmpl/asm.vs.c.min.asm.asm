; /*--------------------------------------------------------------------------
;  *
;  *			ј——≈ћЅЋ≈–Ќјя –≈јЋ»«ј÷»я ѕ–ќ÷≈ƒ”–џ Ќј’ќ∆ƒ≈Ќ»я ћ»Ќ»ћ”ћј
;  *
; ------------------------------------------------------------------------- */
.386
.MODEL FLAT
.CODE

_asm_min	proc
	PUSH	ESI					; сохрн€ем
	PUSH	EDI					;			регистры

	MOV	ESI,[ESP+8+4]			; готовим src
	MOV	EDX,[ESP+8+8]			; готовим n

	CMP	EDX,2					; if n < 2 exit
	JB	@exit					;

	LODSD						; берем первое двойное слово и...
	MOV	EDI, EAX				; ...временно назначаем самым маленьким числом

@for:
	LODSD						; берем очередное двойное слово
	CMP	EDI, EAX				; если самое маленькое найденное двойное слово
	JB	@next					; меньше последнего вз€того двойного слова,
	MOV	EAX, EDI				; то все ќ , в противном случае, завание
								; "самого маленького" мы передаем другому
@next:
	DEC	EDX						; уменьшаем счетчик обработнных дв. слов на 1
	JNZ	@for					; повтор€ем цикл до тех пор, пока не обработаем
								; все слова
		
@exit:
	POP	EDI						; восстанавливаем
	POP	ESI						;					регистры

	ret							; возвращаемс€
_asm_min	endp
END


