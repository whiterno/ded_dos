; N_ITER EQU	?	;// <-- !auto gen!

; /*--------------------------------------------------------------------------
;  *
;  *			 макрос, автоматически дублирующий свое тело N раз
;  *
; ---------------------------------------------------------------------------*/
STORE_BUFF MACRO N
	_N = N			
	_A = 0			 
	WHILE _A NE _N	 
		NOP				; 			<-- ТЕЛО МАКРОСА		 
		_A = _A + 1  
	ENDM
ENDM


; /*--------------------------------------------------------------------------
;  *
;  *		ДЕМОНСТРАЦИЯ ВЫГРУЗКИ БУФЕРОВ ВО ВРЕМЕНЯ ПРОСТОЯ ШИНЫ
;  *
; ---------------------------------------------------------------------------*/
	MOV	[ESI],	ECX		; *p = a;	<-	тут мы записываем в *p некое  значение
						;			<-	записываемое значение в первую очередь
						;			<- 	попадает в буфер записи (store buffer)

	STORE_BUFF	N_ITER	; ...       <-	один или несколько NOP
						; ...		 	параллельно с их выполнением содержимое
						; ...   		буферов вытесняется в кэш первого (AMD)
						; ...			или второго (Intel) уровней

	MOV	EDX,	[ESI]	; b=*p;		<-	читаем содержимое ячейки *p
						;				если к этому моменту  соответсвующий ей
						;				буфер еще не вытеснен, то она прочтется
						;				максимально  быстро;   в  противном  же	
						;				случаи возникнет задержка

	ADD	ESI,	32*20	; (int)p+32 <-	смещаем указатель на след. буфер	

