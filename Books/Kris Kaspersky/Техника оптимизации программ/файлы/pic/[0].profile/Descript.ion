0.01.doc Диаграмма, иллюстрирующая общее время выполнения каждой из функций. На первый взгляд, здесь три горячих точки, но на самом деле это не так
0.02.doc Диаграмма, иллюстрирующие чистое время работы каждой из функций (т.е. с вычетом времени дочерних функций). Как видно, в программе есть одна, но чрезвычайно горячая точка.
[0].profile Часть 0
0.03.tif Логотип профилировщика VTune
0.04.tif Логотип профилировщика AMD Code Analyst
0.05.tif "Визитная карточка" профилировщика Microsoft Profile.exe
0.06.tif Содержимое окон VTune сразу же после анализа приложения. В первую очередь нас интересует верхнее окно, "картографирующее" горячие точки, расположенные согласно их адресам. Нижнее окно содержит информацию о относительном времени выполнении всех модулей системы. Обратите внимание, модуль pswd.exe (на диаграмме он отмечен стрелкой) занял далеко не первое место и основную долю производительности "съел" кто-то другой. Создается обманчивое впечатление, что оптимизировать модуль pswd.exe бессмысленно, но это не так...
0.07.tif Иерархия "горячих" функций, построенная Мастером Call Graph. Цвет символизирует "температуру" функции, а стоящее возле нее число сообщает сколько именно она вызвалась раз
0.08.tif Распределение температуры внутри функции Calculate CRC (снимок сделан с высоким разрешением)
0.09.tif Динамический анализ программы не только определяет температуру каждой машинной инструкции, но и объясняет причины ее "нагрева"
0.10.tif Использование Ассемблерного Тренера для оптимизации планирования машинных команд
0.11.doc Хронология оптимизация парольного переборщика
Descript.ion /cat/root
