;-----------------------------------------------------------------------------
;                  Задание # 13. Файл 13lib.asm
; 			Библиотека процедур
;                (c) 2001 Copyleft  Andreev Andrey
;-----------------------------------------------------------------------------

; Описание констант

videoseg        = 0b800h
probel          = 0e00h         ; символ, которым заполняется прямоугольник

left_up         = 0ec9h         ; ╔             символы рамки          -->
hor_line        = 0ecdh         ; ═
right_up        = 0ebbh         ; ╗
ver_line        = 0ebah         ; ║
right_down      = 0ebch         ; ╝
left_down       = 0ec8h         ; ╚             символы рамки          <--
		
;----------------------------------------------------------------------------
.code
;----------------------------------------------------------------------------
; Процедура вывода содержимого рега ax
; Надо, чтоб в es'е было 0b800h
; Изменяемые регистры : di, ax, dx.
;----------------------------------------------------------------------------

show_ax         proc
                std             ; установка флага уменьшения di

                mov dl, 16d     ; то, на что будем делить ах для перевода

again_div:      div dl 		; деление
                cmp ah, 10d
		jl first_sym	; ah < 10
		jae second_sym  ; ah >= 10

next:           mov dh, al      ; запоминание частного
                xchg ah, al     ; поменять местами частное и остаток
                mov ah, string_color     ; цвет вывода
                stosw           ; вывод символа
                mov al, dh      ; восстановление частного
                mov ah, 0       ; обнуление остатка
                cmp al, 0       ; если частное - нуль, то цикл НЕ повторяется
                jne again_div

                jmp end_ax

first_sym:	add ah, '0'
		jmp next

second_sym:	add ah, 'A' - 10
		jmp next

end_ax:         ret
                endp         
;----------------------------------------------------------------------------
; Конец процедуры вывода содержимого рега ax
;----------------------------------------------------------------------------

;----------------------------------------------------------------------------
; Процедура рисования рамки
; Необходимо, чтобы в es'е был videoseg
; Изменяемые регистры : ax, di, cx, bx, si.
;----------------------------------------------------------------------------

draw_frame 	proc

; Подготовка к заливке прямоугольника пробельными символами

                mov ax, probel
                mov di, (y1 * 80 + x1) * 2
                mov cx, x2 - x1         ; Window width
                mov si, 0000h           ; si -> bx. if si = bx, exit
                mov bx, y2 - y1         ; Window height

;Заливка прямоугольника пробелами (два цикла)

x1_to_x2:       stosw                   ; mov es:[di], ax  /  inc di
                loop x1_to_x2

y1_to_y2:       add di, (80d - (x2 - x1)) * 2
                inc si
                mov cx, x2 - x1
                cmp si, bx
                jne x1_to_x2

; Рисование рамки вокруг ранее нарисованного прямоугольника

                mov di, (y1 * 80 + x1 - 81) * 2
                mov ax, left_up
                stosw                   ;Вставка верхнего левого угла рамки

                mov ax, hor_line        ;рисование верхней линии рамки
                mov cx, x2 - x1
                rep stosw

                mov ax, right_up
                stosw                   ;рисование верхнего правого угла рамки
                                        ;рисование вертикальных линий рамки
                mov di, (y1 * 80 + x1 - 1) * 2
                mov ax, ver_line
                mov si, 1d              ;Счетчик до двух

right_ver:      mov cx, y2 - y1
vertical:       stosw
                add di, 79d * 2
                loop vertical

                mov di, (y1 * 80 + x2) * 2
                add si, 1d
                cmp si, 2d
                je  right_ver

                mov ax, left_down       ;рисование нижнего левого угла рамки
                mov di, (y2 * 80 + x1 - 1) * 2
                stosw

                mov ax, hor_line        ;рисование нижней горизонтальной рамки
                mov cx, x2 - x1
                rep stosw
                                        ;и последнее!
                mov ax, right_down      ;рисование нижнего правого угла рамки
                stosw

		ret
		endp

;----------------------------------------------------------------------------
; Конец процедуры рисования рамки
;----------------------------------------------------------------------------

;----------------------------------------------------------------------------
; 		Процедура вывода надписи
; entry:	si - string address
;		di - смещение по b800, указывающее начало строки
; assumes:	es = b800h
; exit:		none
; destr:	ax 
;----------------------------------------------------------------------------

print_str	proc
                mov ah, string_color
again:          lodsb
                cmp al, '$'
                je done
                stosw
                jmp again

done:		ret
		endp

;-----------------------------------------------------------------------------
;	Конец процедуры вывода надписи
;-----------------------------------------------------------------------------

;----------------------------------------------------------------------------
;                               Конец...
;----------------------------------------------------------------------------
